2020-10-30 08:34:07.357  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:34:09.604  WARN 3668 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 08:34:11.060  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:34:12.080  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:34:15.290  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:34:17.004  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:34:19.751  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 14.659 seconds (JVM running for 16.148)
2020-10-30 08:35:39.847  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 08:36:02.923  INFO 3668 --- [http-nio-9002-exec-2] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 08:37:40.762  INFO 3668 --- [http-nio-9002-exec-4] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 08:37:57.821  INFO 3668 --- [http-nio-9002-exec-6] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 08:38:29.001  INFO 3668 --- [http-nio-9002-exec-7] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 08:38:36.004  INFO 3668 --- [http-nio-9002-exec-10] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 08:42:37.075  WARN 3668 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604027557075, current=DOWN, previous=UP]
2020-10-30 08:42:41.296  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:42:42.299  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:42:42.835  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:42:43.254  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:42:43.979  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.316 seconds (JVM running for 520.376)
2020-10-30 08:43:04.437  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 08:44:26.956  WARN 3668 --- [Thread-12] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604027666956, current=DOWN, previous=UP]
2020-10-30 08:44:31.237  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:44:32.197  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:44:32.686  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:44:33.101  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:44:33.626  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.034 seconds (JVM running for 630.024)
2020-10-30 08:44:47.980  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 08:44:48.042  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-10-30 08:45:35.551  WARN 3668 --- [Thread-20] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604027735551, current=DOWN, previous=UP]
2020-10-30 08:45:39.782  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:45:40.716  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:45:41.192  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:45:41.703  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:45:42.406  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.25 seconds (JVM running for 698.803)
2020-10-30 08:46:46.093  WARN 3668 --- [Thread-28] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604027806093, current=DOWN, previous=UP]
2020-10-30 08:46:50.796  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:46:52.115  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:46:52.822  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:46:53.390  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:46:54.070  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.171 seconds (JVM running for 770.467)
2020-10-30 08:47:54.004  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 08:47:54.037  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-10-30 08:48:56.298  WARN 3668 --- [Thread-36] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604027936298, current=DOWN, previous=UP]
2020-10-30 08:49:00.556  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:49:01.792  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:49:02.398  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:49:02.948  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:49:03.690  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.83 seconds (JVM running for 900.089)
2020-10-30 08:52:07.797  WARN 3668 --- [Thread-44] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028127797, current=DOWN, previous=UP]
2020-10-30 08:52:12.091  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:52:13.006  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:52:13.458  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:52:13.852  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:52:14.416  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 2.969 seconds (JVM running for 1090.814)
2020-10-30 08:53:21.953  WARN 3668 --- [Thread-52] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028201953, current=DOWN, previous=UP]
2020-10-30 08:53:26.349  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:53:27.297  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:53:27.754  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:53:28.148  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:53:28.617  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 2.91 seconds (JVM running for 1165.02)
2020-10-30 08:54:38.304  WARN 3668 --- [Thread-60] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028278304, current=DOWN, previous=UP]
2020-10-30 08:54:42.679  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:54:43.627  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:54:44.111  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:54:44.554  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:54:45.038  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.012 seconds (JVM running for 1241.438)
2020-10-30 08:56:46.303  WARN 3668 --- [Thread-68] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028406303, current=DOWN, previous=UP]
2020-10-30 08:56:50.572  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:56:51.513  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:56:52.102  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:56:52.587  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:56:53.057  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.127 seconds (JVM running for 1369.458)
2020-10-30 08:57:19.038  WARN 3668 --- [Thread-76] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028439038, current=DOWN, previous=UP]
2020-10-30 08:57:23.267  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:57:24.328  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:57:24.907  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:57:25.477  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:57:26.321  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.68 seconds (JVM running for 1402.718)
2020-10-30 08:59:29.171  WARN 3668 --- [Thread-84] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604028569171, current=DOWN, previous=UP]
2020-10-30 08:59:33.401  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 08:59:34.341  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 08:59:34.828  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 08:59:35.223  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 08:59:35.716  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 2.977 seconds (JVM running for 1532.114)
2020-10-30 09:00:27.688  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 09:09:50.062  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:11:22.103  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:11:38.683  WARN 3668 --- [http-nio-9002-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:12:01.407  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:12:07.395  WARN 3668 --- [http-nio-9002-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:12:51.879  WARN 3668 --- [http-nio-9002-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: (PushbackInputStream); line: 11, column: 2]]
2020-10-30 09:12:55.551  WARN 3668 --- [http-nio-9002-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:13:09.883  WARN 3668 --- [http-nio-9002-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 09:13:54.609  WARN 3668 --- [Thread-92] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029434609, current=DOWN, previous=UP]
2020-10-30 09:13:58.999  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:14:00.148  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:14:00.756  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:14:01.189  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:14:01.736  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.454 seconds (JVM running for 2398.133)
2020-10-30 09:14:07.056  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:14:45.019  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:14:45.043  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:15:31.021  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:15:31.032  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:16:02.556  INFO 3668 --- [http-nio-9002-exec-4] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:16:02.565  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:16:40.232  WARN 3668 --- [Thread-100] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029600232, current=DOWN, previous=UP]
2020-10-30 09:16:45.857  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:16:47.832  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:16:48.739  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:16:49.511  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:16:50.472  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.825 seconds (JVM running for 2566.869)
2020-10-30 09:17:05.938  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:17:05.976  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:17:49.465  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:17:49.488  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:18:00.693  WARN 3668 --- [Thread-108] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029680693, current=DOWN, previous=UP]
2020-10-30 09:18:06.072  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:18:08.284  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:18:09.181  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:18:10.025  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:18:10.984  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 6.171 seconds (JVM running for 2647.381)
2020-10-30 09:18:20.344  WARN 3668 --- [Thread-116] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029700344, current=DOWN, previous=UP]
2020-10-30 09:18:25.619  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:18:27.739  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:18:28.774  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:18:29.633  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:18:30.676  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 6.327 seconds (JVM running for 2667.073)
2020-10-30 09:18:36.544  WARN 3668 --- [Thread-124] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029716544, current=DOWN, previous=UP]
2020-10-30 09:18:42.318  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:18:44.185  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:18:45.249  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:18:46.319  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:18:47.511  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 6.436 seconds (JVM running for 2683.909)
2020-10-30 09:19:01.111  WARN 3668 --- [Thread-132] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604029741111, current=DOWN, previous=UP]
2020-10-30 09:19:06.749  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:19:08.563  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:19:09.607  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:19:10.589  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:19:10.993  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:19:11.150  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:19:11.805  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 6.413 seconds (JVM running for 2708.203)
2020-10-30 09:19:12.370  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:19:12.386  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 09:19:20.890  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 09:20:54.684  INFO 3668 --- [http-nio-9002-exec-5] c.cg.ofd.controller.CategoryController   : Inside updateItem() method of ItemController
2020-10-30 09:21:25.281  INFO 3668 --- [http-nio-9002-exec-6] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 09:22:52.418  INFO 3668 --- [http-nio-9002-exec-9] c.cg.ofd.controller.CategoryController   : Inside deleteItem() method of ItemController
2020-10-30 09:22:59.866  INFO 3668 --- [http-nio-9002-exec-7] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 09:25:14.566  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 09:25:29.649  INFO 3668 --- [http-nio-9002-exec-2] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 09:26:26.549  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 09:44:24.541  WARN 3668 --- [Thread-140] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604031264541, current=DOWN, previous=UP]
2020-10-30 09:44:30.091  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:44:32.061  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:44:32.889  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:44:33.537  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:44:34.227  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.272 seconds (JVM running for 4230.625)
2020-10-30 09:53:16.196  WARN 3668 --- [Thread-148] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604031796196, current=DOWN, previous=UP]
2020-10-30 09:53:21.689  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:53:23.158  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:53:23.923  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:53:24.561  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:53:25.250  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.559 seconds (JVM running for 4761.647)
2020-10-30 09:54:08.536  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.addRestaurant(com.cg.ofd.bean.Restaurant): [Field error in object 'restaurant' on field 'restaurantName': rejected value []; codes [Size.restaurant.restaurantName,Size.restaurantName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.restaurantName,restaurantName]; arguments []; default message [restaurantName],2147483647,2]; default message [Name should have atleast 2 characters]] ]
2020-10-30 09:54:27.844  WARN 3668 --- [Thread-156] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604031867844, current=DOWN, previous=UP]
2020-10-30 09:54:33.057  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:54:34.367  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:54:35.001  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:54:35.066  WARN 3668 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerExceptionResolver' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
2020-10-30 09:54:35.117 ERROR 3668 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerExceptionResolver' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143) ~[spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at com.cg.ofd.RestaurantManagementApplication.main(RestaurantManagementApplication.java:28) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.3.4.RELEASE.jar:2.3.4.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 25 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.web.method.annotation.ExceptionHandlerMethodResolver.addExceptionMapping(ExceptionHandlerMethodResolver.java:101) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.method.annotation.ExceptionHandlerMethodResolver.<init>(ExceptionHandlerMethodResolver.java:65) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:281) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet(ExceptionHandlerExceptionResolver.java:258) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.addDefaultHandlerExceptionResolvers(WebMvcConfigurationSupport.java:1007) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.handlerExceptionResolver(WebMvcConfigurationSupport.java:949) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at sun.reflect.GeneratedMethodAccessor552.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 26 common frames omitted

2020-10-30 09:54:37.325  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:54:39.532  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:54:40.149  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:54:40.219  WARN 3668 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerExceptionResolver' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
2020-10-30 09:54:40.241 ERROR 3668 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerExceptionResolver' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143) ~[spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at com.cg.ofd.RestaurantManagementApplication.main(RestaurantManagementApplication.java:28) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.3.4.RELEASE.jar:2.3.4.RELEASE]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception; nested exception is java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 25 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous @ExceptionHandler method mapped for [class org.springframework.web.bind.MethodArgumentNotValidException]: {public org.springframework.http.ResponseEntity com.cg.ofd.exception.RestErrorHandler.handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.web.context.request.WebRequest), public final org.springframework.http.ResponseEntity org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest) throws java.lang.Exception}
	at org.springframework.web.method.annotation.ExceptionHandlerMethodResolver.addExceptionMapping(ExceptionHandlerMethodResolver.java:101) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.method.annotation.ExceptionHandlerMethodResolver.<init>(ExceptionHandlerMethodResolver.java:65) ~[spring-web-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:281) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet(ExceptionHandlerExceptionResolver.java:258) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.addDefaultHandlerExceptionResolvers(WebMvcConfigurationSupport.java:1007) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.handlerExceptionResolver(WebMvcConfigurationSupport.java:949) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at sun.reflect.GeneratedMethodAccessor552.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 26 common frames omitted

2020-10-30 09:55:24.891  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:55:26.216  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:55:26.987  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:55:27.591  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:55:28.337  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.443 seconds (JVM running for 4884.734)
2020-10-30 09:58:39.551  WARN 3668 --- [Thread-164] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604032119551, current=DOWN, previous=UP]
2020-10-30 09:58:44.467  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:58:45.840  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:58:46.507  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:58:47.040  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:58:47.641  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.106 seconds (JVM running for 5084.039)
2020-10-30 09:58:53.086  WARN 3668 --- [Thread-184] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604032133086, current=DOWN, previous=UP]
2020-10-30 09:58:57.943  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 09:58:59.344  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 09:59:00.037  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 09:59:00.658  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 09:59:01.323  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.242 seconds (JVM running for 5097.721)
2020-10-30 09:59:13.980  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.addRestaurant(com.cg.ofd.bean.Restaurant): [Field error in object 'restaurant' on field 'restaurantName': rejected value []; codes [Size.restaurant.restaurantName,Size.restaurantName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.restaurantName,restaurantName]; arguments []; default message [restaurantName],2147483647,2]; default message [Name should have atleast 2 characters]] ]
2020-10-30 09:59:49.129  INFO 3668 --- [http-nio-9002-exec-2] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 10:00:49.219  INFO 3668 --- [http-nio-9002-exec-4] c.c.ofd.controller.RestaurantController  : Inside deleteRestaurant() method of RestaurantController
2020-10-30 10:00:49.232  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.cg.ofd.exception.EntityNotFoundException: restaurant id100045not found]
2020-10-30 10:07:45.085  INFO 3668 --- [http-nio-9002-exec-6] c.c.ofd.controller.RestaurantController  : Inside addRestaurant() method of RestaurantController
2020-10-30 10:09:10.273  INFO 3668 --- [http-nio-9002-exec-9] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 10:10:34.842  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:10:34.869  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 10:10:57.256  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:10:57.266  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 10:11:03.715  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:12:45.240  INFO 3668 --- [http-nio-9002-exec-5] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:16:36.244  WARN 3668 --- [Thread-192] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033196244, current=DOWN, previous=UP]
2020-10-30 10:16:41.807  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:16:43.474  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:16:44.343  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:16:44.962  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:16:45.825  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.073 seconds (JVM running for 6162.222)
2020-10-30 10:17:22.130  WARN 3668 --- [Thread-200] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033242130, current=DOWN, previous=UP]
2020-10-30 10:17:27.340  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:17:28.754  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:17:29.435  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:17:29.989  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:17:30.631  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.281 seconds (JVM running for 6207.029)
2020-10-30 10:19:19.571  WARN 3668 --- [Thread-208] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033359571, current=DOWN, previous=UP]
2020-10-30 10:19:24.442  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:19:25.769  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:19:26.430  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:19:27.022  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:19:27.645  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.184 seconds (JVM running for 6324.042)
2020-10-30 10:20:31.333  WARN 3668 --- [Thread-216] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033431333, current=DOWN, previous=UP]
2020-10-30 10:20:36.191  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:20:37.623  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:20:38.323  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:20:38.865  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:20:39.509  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.22 seconds (JVM running for 6395.906)
2020-10-30 10:20:48.575  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.addRestaurant(com.cg.ofd.bean.Restaurant): [Field error in object 'restaurant' on field 'restaurantName': rejected value []; codes [Size.restaurant.restaurantName,Size.restaurantName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.restaurantName,restaurantName]; arguments []; default message [restaurantName],2147483647,2]; default message [Name should have atleast 2 characters]] ]
2020-10-30 10:21:07.043  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.addRestaurant(com.cg.ofd.bean.Restaurant) with 2 errors: [Field error in object 'restaurant' on field 'restaurantName': rejected value []; codes [Size.restaurant.restaurantName,Size.restaurantName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.restaurantName,restaurantName]; arguments []; default message [restaurantName],2147483647,2]; default message [Name should have atleast 2 characters]] [Field error in object 'restaurant' on field 'managerName': rejected value []; codes [Size.restaurant.managerName,Size.managerName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.managerName,managerName]; arguments []; default message [managerName],2147483647,2]; default message [ManagerName should have atleast 2 characters]] ]
2020-10-30 10:23:20.770  WARN 3668 --- [Thread-224] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033600770, current=DOWN, previous=UP]
2020-10-30 10:23:25.459  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:23:26.885  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:23:27.518  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:23:28.032  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:23:28.765  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.16 seconds (JVM running for 6565.162)
2020-10-30 10:25:44.763  WARN 3668 --- [Thread-232] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033744763, current=DOWN, previous=UP]
2020-10-30 10:25:49.656  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:25:51.017  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:25:51.702  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:25:52.219  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:25:52.891  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.189 seconds (JVM running for 6709.288)
2020-10-30 10:26:40.153  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:27:21.026  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:27:21.082  WARN 3668 --- [http-nio-9002-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1452, SQLState: 23000
2020-10-30 10:27:21.082 ERROR 3668 --- [http-nio-9002-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : Cannot add or update a child row: a foreign key constraint fails (`restaurant`.`items`, CONSTRAINT `FK_category` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2020-10-30 10:27:21.133  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-10-30 10:27:49.189  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:28:44.997  INFO 3668 --- [http-nio-9002-exec-4] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:28:49.705  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cg.ofd.bean.Category com.cg.ofd.controller.CategoryController.addCategory(com.cg.ofd.bean.Category)]
2020-10-30 10:29:15.341  WARN 3668 --- [Thread-240] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604033955341, current=DOWN, previous=UP]
2020-10-30 10:29:20.749  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:29:22.079  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:29:22.868  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:29:23.420  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:29:24.115  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.449 seconds (JVM running for 6920.512)
2020-10-30 10:29:26.759  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cg.ofd.bean.Category com.cg.ofd.controller.CategoryController.addCategory(com.cg.ofd.bean.Category)]
2020-10-30 10:30:20.203  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:30:20.228  WARN 3668 --- [http-nio-9002-exec-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1452, SQLState: 23000
2020-10-30 10:30:20.229 ERROR 3668 --- [http-nio-9002-exec-2] o.h.engine.jdbc.spi.SqlExceptionHelper   : Cannot add or update a child row: a foreign key constraint fails (`restaurant`.`items`, CONSTRAINT `FK_category` FOREIGN KEY (`category_id`) REFERENCES `category` (`category_id`))
2020-10-30 10:30:20.243  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement]
2020-10-30 10:30:26.665  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:30:26.680  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.cg.ofd.bean.Items.category -> com.cg.ofd.bean.Category; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.cg.ofd.bean.Items.category -> com.cg.ofd.bean.Category]
2020-10-30 10:31:58.239  WARN 3668 --- [Thread-248] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034118239, current=DOWN, previous=UP]
2020-10-30 10:32:03.311  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:32:04.666  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:32:05.366  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:32:06.058  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:32:06.460  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:32:06.466  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.cg.ofd.exception.EntityNotFoundException: Category details not found]
2020-10-30 10:32:06.934  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.555 seconds (JVM running for 7083.331)
2020-10-30 10:32:28.691  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:32:28.694  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.cg.ofd.exception.EntityNotFoundException: Category details not found]
2020-10-30 10:32:55.177  WARN 3668 --- [Thread-256] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034175177, current=DOWN, previous=UP]
2020-10-30 10:33:00.287  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:33:01.808  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:33:02.504  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:33:03.274  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:33:03.445  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:33:03.452  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.cg.ofd.exception.EntityNotFoundException: Category details not found]
2020-10-30 10:33:04.031  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.716 seconds (JVM running for 7140.428)
2020-10-30 10:33:25.308  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Category com.cg.ofd.controller.CategoryController.addCategory(com.cg.ofd.bean.Category): [Field error in object 'category' on field 'categoryName': rejected value []; codes [Size.category.categoryName,Size.categoryName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [category.categoryName,categoryName]; arguments []; default message [categoryName],2147483647,2]; default message [Name should have atleast 2 characters]] ]
2020-10-30 10:33:48.175  INFO 3668 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:34:23.606  INFO 3668 --- [http-nio-9002-exec-4] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:34:31.319  INFO 3668 --- [http-nio-9002-exec-5] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 10:35:44.361  INFO 3668 --- [http-nio-9002-exec-7] c.cg.ofd.controller.CategoryController   : Inside addCategory() method of CategoryController
2020-10-30 10:35:44.363  WARN 3668 --- [http-nio-9002-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.cg.ofd.exception.EntityNotFoundException: Category details not found]
2020-10-30 10:37:31.654  WARN 3668 --- [Thread-264] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034451654, current=DOWN, previous=UP]
2020-10-30 10:37:34.962  WARN 3668 --- [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor shutting down, can't accept the task
2020-10-30 10:37:37.026  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:37:38.514  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:37:39.259  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:37:39.894  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:37:40.515  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.56 seconds (JVM running for 7416.912)
2020-10-30 10:37:53.892  WARN 3668 --- [Thread-272] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034473892, current=DOWN, previous=UP]
2020-10-30 10:37:59.099  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:38:00.531  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:38:01.238  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:38:01.779  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:38:02.423  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.297 seconds (JVM running for 7438.82)
2020-10-30 10:38:05.798  WARN 3668 --- [Thread-280] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034485798, current=DOWN, previous=UP]
2020-10-30 10:38:11.093  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:38:12.496  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:38:13.183  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:38:13.702  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:38:14.330  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.217 seconds (JVM running for 7450.727)
2020-10-30 10:40:17.549  INFO 3668 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 10:40:17.596  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-10-30 10:40:31.606  INFO 3668 --- [http-nio-9002-exec-2] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 10:42:06.377  INFO 3668 --- [http-nio-9002-exec-4] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 10:42:06.404  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-10-30 10:43:06.235  WARN 3668 --- [Thread-288] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034786235, current=DOWN, previous=UP]
2020-10-30 10:43:11.513  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:43:12.767  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:43:13.427  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:43:14.130  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:43:15.104  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.555 seconds (JVM running for 7751.502)
2020-10-30 10:43:24.443  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.updateRestaurant(com.cg.ofd.bean.Restaurant): [Field error in object 'restaurant' on field 'restaurantName': rejected value []; codes [Size.restaurant.restaurantName,Size.restaurantName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.restaurantName,restaurantName]; arguments []; default message [restaurantName],2147483647,2]; default message [Name should have atleast 2 characters]] ]
2020-10-30 10:44:04.311  WARN 3668 --- [Thread-296] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034844311, current=DOWN, previous=UP]
2020-10-30 10:44:09.545  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:44:10.777  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:44:11.443  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:44:11.965  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:44:12.610  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.102 seconds (JVM running for 7809.008)
2020-10-30 10:44:16.011  WARN 3668 --- [Thread-304] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604034856011, current=DOWN, previous=UP]
2020-10-30 10:44:21.052  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:44:22.222  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:44:22.851  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:44:23.450  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:44:24.066  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.847 seconds (JVM running for 7820.463)
2020-10-30 10:45:36.289  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 8, column: 30]]
2020-10-30 10:45:45.256  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:46:28.451  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:46:37.566  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:47:02.491  WARN 3668 --- [http-nio-9002-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:47:07.691  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:47:14.114  WARN 3668 --- [http-nio-9002-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:48:36.856  WARN 3668 --- [http-nio-9002-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:48:52.006  WARN 3668 --- [http-nio-9002-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Double'. Check configuration for 'cost']
2020-10-30 10:49:04.902  WARN 3668 --- [Thread-312] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035144902, current=DOWN, previous=UP]
2020-10-30 10:49:09.785  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:49:11.012  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:49:11.676  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:49:12.236  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:49:12.856  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.964 seconds (JVM running for 8109.253)
2020-10-30 10:49:25.764  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 10:49:33.531  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 10:49:50.453  WARN 3668 --- [Thread-320] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035190453, current=DOWN, previous=UP]
2020-10-30 10:49:55.909  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:49:57.490  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:49:58.268  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:49:58.864  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:49:59.047  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:49:59.699  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.758 seconds (JVM running for 8156.096)
2020-10-30 10:52:10.611  WARN 3668 --- [Thread-328] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035330611, current=DOWN, previous=UP]
2020-10-30 10:52:15.544  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:52:16.977  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:52:17.754  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:52:18.316  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:52:18.974  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 7, column: 30]]
2020-10-30 10:52:19.405  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.872 seconds (JVM running for 8295.802)
2020-10-30 10:52:26.558  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 7, column: 30]]
2020-10-30 10:52:34.770  INFO 3668 --- [http-nio-9002-exec-4] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 10:53:08.612  WARN 3668 --- [Thread-336] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035388612, current=DOWN, previous=UP]
2020-10-30 10:53:14.124  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:53:15.470  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:53:16.104  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:53:16.873  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:53:17.619  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.389 seconds (JVM running for 8354.016)
2020-10-30 10:53:22.640  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 7, column: 30]]
2020-10-30 10:53:29.533  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 7, column: 30]]
2020-10-30 10:54:11.123  WARN 3668 --- [Thread-344] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035451123, current=DOWN, previous=UP]
2020-10-30 10:54:16.176  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:54:17.393  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:54:18.101  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:54:18.693  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:54:19.310  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.993 seconds (JVM running for 8415.707)
2020-10-30 10:55:22.023  WARN 3668 --- [Thread-352] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035522023, current=DOWN, previous=UP]
2020-10-30 10:55:27.103  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 10:55:28.693  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 10:55:29.362  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 10:55:29.883  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 10:55:30.538  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.505 seconds (JVM running for 8486.936)
2020-10-30 10:55:31.467  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 7, column: 30]]
2020-10-30 10:55:38.760  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 10, column: 2]]
2020-10-30 10:58:57.260  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 10, column: 2]]
2020-10-30 11:02:08.191  WARN 3668 --- [Thread-360] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604035928191, current=DOWN, previous=UP]
2020-10-30 11:02:15.368  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:02:16.859  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:02:17.685  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:02:18.323  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:02:19.077  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.654 seconds (JVM running for 8895.474)
2020-10-30 11:03:01.156  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 10, column: 2]]
2020-10-30 11:03:10.469  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'cost': rejected value [45.0]; codes [DecimalMax.items.cost,DecimalMax.cost,DecimalMax.double,DecimalMax]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.cost,cost]; arguments []; default message [cost],true,2.0]; default message [must be less than or equal to 2.0]] ]
2020-10-30 11:03:27.372  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'cost': rejected value [45.0]; codes [DecimalMax.items.cost,DecimalMax.cost,DecimalMax.double,DecimalMax]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.cost,cost]; arguments []; default message [cost],true,2.0]; default message [must be less than or equal to 2.0]] ]
2020-10-30 11:03:36.612  WARN 3668 --- [http-nio-9002-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'cost': rejected value [9.0]; codes [DecimalMax.items.cost,DecimalMax.cost,DecimalMax.double,DecimalMax]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.cost,cost]; arguments []; default message [cost],true,2.0]; default message [must be less than or equal to 2.0]] ]
2020-10-30 11:03:42.917  WARN 3668 --- [http-nio-9002-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'cost': rejected value [9.0]; codes [DecimalMax.items.cost,DecimalMax.cost,DecimalMax.double,DecimalMax]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.cost,cost]; arguments []; default message [cost],true,2.0]; default message [must be less than or equal to 2.0]] ]
2020-10-30 11:04:02.832  WARN 3668 --- [Thread-368] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604036042832, current=DOWN, previous=UP]
2020-10-30 11:04:09.030  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:04:10.412  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:04:11.102  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:04:11.658  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:04:12.350  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.338 seconds (JVM running for 9008.747)
2020-10-30 11:04:12.703  INFO 3668 --- [http-nio-9002-exec-4] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:04:23.084  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 9, column: 2]]
2020-10-30 11:04:30.219  INFO 3668 --- [http-nio-9002-exec-7] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:04:53.392  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 9, column: 2]]
2020-10-30 11:07:37.782  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Restaurant com.cg.ofd.controller.RestaurantController.addRestaurant(com.cg.ofd.bean.Restaurant): [Field error in object 'restaurant' on field 'contactNo': rejected value []; codes [Size.restaurant.contactNo,Size.contactNo,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [restaurant.contactNo,contactNo]; arguments []; default message [contactNo],2147483647,10]; default message [Contactno should have atleast 10 digits]] ]
2020-10-30 11:11:15.686  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value
 at [Source: (PushbackInputStream); line: 9, column: 2]]
2020-10-30 11:11:30.002  WARN 3668 --- [Thread-376] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604036490002, current=DOWN, previous=UP]
2020-10-30 11:11:35.873  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:11:37.261  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:11:37.903  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:11:38.429  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:11:39.197  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.205 seconds (JVM running for 9455.593)
2020-10-30 11:12:03.586  WARN 3668 --- [Thread-384] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604036523586, current=DOWN, previous=UP]
2020-10-30 11:12:08.965  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:12:10.228  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:12:10.856  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:12:11.405  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:12:12.111  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.005 seconds (JVM running for 9488.508)
2020-10-30 11:12:35.522  WARN 3668 --- [Thread-392] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604036555522, current=DOWN, previous=UP]
2020-10-30 11:12:40.714  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:12:42.435  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:12:43.245  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:12:43.879  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:12:44.545  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.833 seconds (JVM running for 9520.943)
2020-10-30 11:12:44.838  WARN 3668 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 6, column: 29]]
2020-10-30 11:12:51.987  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "cost": not a valid Integer value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "cost": not a valid Integer value
 at [Source: (PushbackInputStream); line: 7, column: 17] (through reference chain: com.cg.ofd.bean.Items["quantity"])]
2020-10-30 11:13:00.849  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 11:13:13.834  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 11:13:21.790  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 11:13:35.141  WARN 3668 --- [http-nio-9002-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.Size' validating type 'java.lang.Integer'. Check configuration for 'quantity']
2020-10-30 11:13:49.599  WARN 3668 --- [Thread-400] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604036629599, current=DOWN, previous=UP]
2020-10-30 11:13:55.080  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:13:56.746  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:13:57.516  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:13:58.029  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:13:58.623  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.484 seconds (JVM running for 9595.02)
2020-10-30 11:14:00.116  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:14:06.944  WARN 3668 --- [http-nio-9002-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 6, column: 29]]
2020-10-30 11:15:18.920  WARN 3668 --- [http-nio-9002-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'quantity': rejected value [1]; codes [Min.items.quantity,Min.quantity,Min.int,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.quantity,quantity]; arguments []; default message [quantity],2]; default message [min 2 digit number]] ]
2020-10-30 11:15:29.210  WARN 3668 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'quantity': rejected value [0]; codes [Min.items.quantity,Min.quantity,Min.int,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.quantity,quantity]; arguments []; default message [quantity],2]; default message [min 2 digit number]] ]
2020-10-30 11:15:38.178  WARN 3668 --- [http-nio-9002-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value
 at [Source: (PushbackInputStream); line: 6, column: 29]]
2020-10-30 11:19:41.316  WARN 3668 --- [http-nio-9002-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'quantity': rejected value [0]; codes [Min.items.quantity,Min.quantity,Min.int,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.quantity,quantity]; arguments []; default message [quantity],2]; default message [min 2 digit number]] ]
2020-10-30 11:26:36.212  INFO 3668 --- [http-nio-9002-exec-8] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 11:33:33.772  WARN 3668 --- [http-nio-9002-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.cg.ofd.bean.Items com.cg.ofd.controller.ItemController.addItems(com.cg.ofd.bean.Items): [Field error in object 'items' on field 'quantity': rejected value [0]; codes [Min.items.quantity,Min.quantity,Min.int,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [items.quantity,quantity]; arguments []; default message [quantity],2]; default message [min 2 digit number]] ]
2020-10-30 11:33:38.427  INFO 3668 --- [http-nio-9002-exec-10] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:34:31.454  WARN 3668 --- [Thread-408] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604037871454, current=DOWN, previous=UP]
2020-10-30 11:34:37.634  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:34:39.415  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:34:40.188  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:34:40.743  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:34:41.618  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.107 seconds (JVM running for 10838.016)
2020-10-30 11:34:47.322  INFO 3668 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:34:57.118  INFO 3668 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 11:36:22.331  WARN 3668 --- [Thread-416] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604037982331, current=DOWN, previous=UP]
2020-10-30 11:36:27.870  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 11:36:29.246  WARN 3668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 11:36:29.890  WARN 3668 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 11:36:30.417  WARN 3668 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 11:36:31.060  INFO 3668 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.143 seconds (JVM running for 10947.457)
2020-10-30 11:48:21.397  WARN 3668 --- [RMI TCP Connection(2)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604038701397, current=DOWN, previous=UP]
2020-10-30 12:25:37.191  INFO 39664 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 12:25:39.186  WARN 39664 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 12:25:40.531  WARN 39664 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 12:25:41.294  WARN 39664 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 12:25:44.940  WARN 39664 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 12:25:46.784  WARN 39664 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 12:25:49.421  INFO 39664 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 14.486 seconds (JVM running for 16.069)
2020-10-30 12:27:27.959  INFO 39664 --- [http-nio-9002-exec-2] c.c.ofd.controller.RestaurantController  : Inside findALlRestaurant() method of RestaurantController
2020-10-30 12:28:06.447  INFO 39664 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 12:31:32.104  WARN 39664 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604041292104, current=DOWN, previous=UP]
2020-10-30 12:31:36.977  INFO 39664 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 12:31:38.630  WARN 39664 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 12:31:39.523  WARN 39664 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 12:31:40.195  WARN 39664 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 12:31:41.121  INFO 39664 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.228 seconds (JVM running for 367.769)
2020-10-30 13:00:11.932  INFO 39664 --- [http-nio-9002-exec-1] c.c.ofd.controller.RestaurantController  : Inside updateRestaurant() method of RestaurantController
2020-10-30 13:00:50.425  WARN 39664 --- [RMI TCP Connection(2)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604043050425, current=DOWN, previous=UP]
2020-10-30 13:50:39.507  INFO 35672 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 13:50:42.056  WARN 35672 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 13:50:43.500  WARN 35672 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 13:50:44.156  WARN 35672 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 13:50:47.564  WARN 35672 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 13:50:49.050  WARN 35672 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 13:50:51.524  INFO 35672 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 16.374 seconds (JVM running for 19.63)
2020-10-30 13:56:08.591  WARN 35672 --- [RMI TCP Connection(2)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604046368591, current=DOWN, previous=UP]
2020-10-30 13:56:10.619 ERROR 35672 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}

com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.25.jar:1.9.25]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57) ~[eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:873) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.25.jar:1.9.25]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.25.jar:1.9.25]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_201]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_201]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_201]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_201]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_201]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_201]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_201]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_201]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_201]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_201]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.12.jar:4.5.12]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 29 common frames omitted

2020-10-30 13:56:10.620  WARN 35672 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-10-30 14:01:48.090  INFO 39720 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 14:01:49.505  WARN 39720 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 14:01:50.651  WARN 39720 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 14:01:51.326  WARN 39720 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 14:01:54.679  WARN 39720 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 14:01:55.952  WARN 39720 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 14:01:58.113  INFO 39720 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 11.73 seconds (JVM running for 12.938)
2020-10-30 14:02:21.341  INFO 40604 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 14:02:24.661  WARN 40604 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 14:02:26.351  WARN 40604 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 14:02:26.963  WARN 40604 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 14:02:29.810  WARN 40604 --- [task-2] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2020-10-30 14:02:29.847  WARN 40604 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 14:02:31.439  WARN 40604 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 14:02:33.679  INFO 40604 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 14.459 seconds (JVM running for 15.707)
2020-10-30 14:03:15.848  WARN 40604 --- [RMI TCP Connection(2)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604046795848, current=DOWN, previous=UP]
2020-10-30 14:04:42.628  INFO 39720 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 14:04:42.775  WARN 39720 --- [http-nio-9002-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 14:05:14.313  INFO 39720 --- [http-nio-9002-exec-2] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 14:05:14.326  WARN 39720 --- [http-nio-9002-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: detached entity passed to persist: com.cg.ofd.bean.Restaurant; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: com.cg.ofd.bean.Restaurant]
2020-10-30 14:05:21.763  INFO 39720 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside addItem() method of ItemController
2020-10-30 14:06:42.273  INFO 39720 --- [http-nio-9002-exec-5] c.cg.ofd.controller.CategoryController   : Inside updateItem() method of ItemController
2020-10-30 14:07:15.208  INFO 39720 --- [http-nio-9002-exec-6] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 15:05:19.196  WARN 39720 --- [RMI TCP Connection(2)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604050519196, current=DOWN, previous=UP]
2020-10-30 17:18:08.267  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 17:18:09.879  WARN 32820 --- [restartedMain] o.s.boot.actuate.endpoint.EndpointId     : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-10-30 17:18:11.322  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 17:18:11.965  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 17:18:15.193  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 17:18:16.461  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 17:18:19.300  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 12.977 seconds (JVM running for 14.391)
2020-10-30 17:18:32.824  INFO 32820 --- [http-nio-9002-exec-1] c.cg.ofd.controller.CategoryController   : Inside findAllItem() method of ItemController
2020-10-30 17:19:58.402  INFO 32820 --- [http-nio-9002-exec-3] c.cg.ofd.controller.CategoryController   : Inside findAllItems() method of ItemController
2020-10-30 17:45:57.578  INFO 32820 --- [http-nio-9002-exec-5] c.cg.ofd.controller.CategoryController   : Inside findAllItems() method of ItemController
2020-10-30 17:46:34.158  INFO 32820 --- [http-nio-9002-exec-6] c.cg.ofd.controller.CategoryController   : Inside findAllItems() method of ItemController
2020-10-30 18:41:02.701  WARN 32820 --- [Thread-8] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604063462701, current=DOWN, previous=UP]
2020-10-30 18:41:07.606  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:41:09.746  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:41:10.852  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:41:11.610  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:41:12.491  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 5.799 seconds (JVM running for 4987.581)
2020-10-30 18:41:17.542  WARN 32820 --- [Thread-12] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604063477542, current=DOWN, previous=UP]
2020-10-30 18:41:22.060  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:41:23.302  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:41:23.976  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:41:24.504  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:41:25.108  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.852 seconds (JVM running for 5000.198)
2020-10-30 18:41:36.597  WARN 32820 --- [Thread-20] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604063496597, current=DOWN, previous=UP]
2020-10-30 18:41:40.972  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:41:42.331  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:41:42.993  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:41:43.545  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:41:44.183  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.004 seconds (JVM running for 5019.273)
2020-10-30 18:50:31.956  WARN 32820 --- [Thread-28] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064031956, current=DOWN, previous=UP]
2020-10-30 18:50:37.098  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:50:38.785  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:50:39.486  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:50:40.050  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:50:40.748  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.792 seconds (JVM running for 5555.838)
2020-10-30 18:51:25.694  WARN 32820 --- [Thread-36] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064085694, current=DOWN, previous=UP]
2020-10-30 18:51:30.188  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:51:31.315  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:51:31.988  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:51:32.548  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:51:33.453  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.065 seconds (JVM running for 5608.544)
2020-10-30 18:51:33.556  WARN 32820 --- [Thread-44] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064093556, current=DOWN, previous=UP]
2020-10-30 18:51:38.226  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:51:39.423  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:51:40.072  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:51:40.644  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:51:41.313  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.073 seconds (JVM running for 5616.403)
2020-10-30 18:51:58.706  WARN 32820 --- [Thread-52] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064118706, current=DOWN, previous=UP]
2020-10-30 18:52:03.375  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:52:04.706  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:52:05.339  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:52:05.872  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:52:06.536  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.017 seconds (JVM running for 5641.626)
2020-10-30 18:52:07.914  WARN 32820 --- [Thread-60] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064127914, current=DOWN, previous=UP]
2020-10-30 18:52:12.493  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 18:52:13.580  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 18:52:14.285  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 18:52:14.917  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 18:52:15.611  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.936 seconds (JVM running for 5650.702)
2020-10-30 19:00:36.911  WARN 32820 --- [Thread-68] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064636911, current=DOWN, previous=UP]
2020-10-30 19:00:41.747  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:00:43.490  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:00:44.309  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:00:44.903  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:00:45.661  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.784 seconds (JVM running for 6160.752)
2020-10-30 19:04:11.276  WARN 32820 --- [Thread-76] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064851276, current=DOWN, previous=UP]
2020-10-30 19:04:16.139  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:04:17.366  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:04:17.975  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:04:18.516  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:04:19.191  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.912 seconds (JVM running for 6374.282)
2020-10-30 19:04:21.537  WARN 32820 --- [Thread-84] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064861537, current=DOWN, previous=UP]
2020-10-30 19:04:26.131  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:04:27.334  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:04:27.958  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:04:28.451  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:04:29.196  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.868 seconds (JVM running for 6384.287)
2020-10-30 19:04:29.512  WARN 32820 --- [Thread-92] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064869512, current=DOWN, previous=UP]
2020-10-30 19:04:34.285  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:04:35.469  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:04:36.062  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:04:36.543  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:04:37.171  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.751 seconds (JVM running for 6392.261)
2020-10-30 19:04:39.621  WARN 32820 --- [Thread-100] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064879621, current=DOWN, previous=UP]
2020-10-30 19:04:44.263  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:04:45.453  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:04:46.145  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:04:46.912  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:04:47.803  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.418 seconds (JVM running for 6402.893)
2020-10-30 19:05:20.909  WARN 32820 --- [Thread-108] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064920909, current=DOWN, previous=UP]
2020-10-30 19:05:25.882  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:05:27.099  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:05:27.144  WARN 32820 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/SULEKHA/.m2/repository/io/springfox/springfox-spring-web/2.9.1/springfox-spring-web-2.9.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/SULEKHA/.m2/repository/io/springfox/springfox-spring-web/2.9.1/springfox-spring-web-2.9.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'categoryController' method 
com.cg.ofd.controller.CategoryController#deleteCategory(int)
to {DELETE /category/deleteCategory/{categoryId}}: There is already 'categoryController' bean method
com.cg.ofd.controller.CategoryController#removeCategory(int) mapped.
2020-10-30 19:05:27.229 ERROR 32820 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/SULEKHA/.m2/repository/io/springfox/springfox-spring-web/2.9.1/springfox-spring-web-2.9.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/SULEKHA/.m2/repository/io/springfox/springfox-spring-web/2.9.1/springfox-spring-web-2.9.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'categoryController' method 
com.cg.ofd.controller.CategoryController#deleteCategory(int)
to {DELETE /category/deleteCategory/{categoryId}}: There is already 'categoryController' bean method
com.cg.ofd.controller.CategoryController#removeCategory(int) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143) ~[spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.3.4.RELEASE.jar:2.3.4.RELEASE]
	at com.cg.ofd.RestaurantManagementApplication.main(RestaurantManagementApplication.java:29) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.3.4.RELEASE.jar:2.3.4.RELEASE]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/SULEKHA/.m2/repository/io/springfox/springfox-spring-web/2.9.1/springfox-spring-web-2.9.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'categoryController' method 
com.cg.ofd.controller.CategoryController#deleteCategory(int)
to {DELETE /category/deleteCategory/{categoryId}}: There is already 'categoryController' bean method
com.cg.ofd.controller.CategoryController#removeCategory(int) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1525) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1489) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1265) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'categoryController' method 
com.cg.ofd.controller.CategoryController#deleteCategory(int)
to {DELETE /category/deleteCategory/{categoryId}}: There is already 'categoryController' bean method
com.cg.ofd.controller.CategoryController#removeCategory(int) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1525) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1489) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1265) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 42 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'categoryController' method 
com.cg.ofd.controller.CategoryController#deleteCategory(int)
to {DELETE /category/deleteCategory/{categoryId}}: There is already 'categoryController' bean method
com.cg.ofd.controller.CategoryController#removeCategory(int) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:636) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:603) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:318) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:378) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:75) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:288) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684) ~[na:1.8.0_201]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:286) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:258) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:217) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:205) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:189) ~[spring-webmvc-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 56 common frames omitted

2020-10-30 19:05:34.387  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:05:35.697  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:05:36.328  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:05:36.825  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:05:37.528  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.843 seconds (JVM running for 6452.618)
2020-10-30 19:05:50.057  WARN 32820 --- [Thread-116] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604064950057, current=DOWN, previous=UP]
2020-10-30 19:05:55.056  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:05:56.202  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:05:56.853  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:05:57.357  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:05:57.936  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 3.675 seconds (JVM running for 6473.027)
2020-10-30 19:07:06.739  WARN 32820 --- [Thread-129] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604065026739, current=DOWN, previous=UP]
2020-10-30 19:07:11.701  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:07:12.920  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:07:13.582  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:07:14.132  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:07:14.897  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.03 seconds (JVM running for 6549.988)
2020-10-30 19:10:31.030  WARN 32820 --- [Thread-137] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1604065231030, current=DOWN, previous=UP]
2020-10-30 19:10:36.023  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : No active profile set, falling back to default profiles: default
2020-10-30 19:10:37.357  WARN 32820 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-10-30 19:10:38.024  WARN 32820 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2020-10-30 19:10:38.596  WARN 32820 --- [restartedMain] ockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-10-30 19:10:39.271  INFO 32820 --- [restartedMain] c.c.ofd.RestaurantManagementApplication  : Started RestaurantManagementApplication in 4.154 seconds (JVM running for 6754.362)
